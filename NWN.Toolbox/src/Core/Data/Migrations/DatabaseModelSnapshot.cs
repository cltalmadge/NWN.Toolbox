// <auto-generated />
using System;
using Jorteck.Toolbox.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jorteck.Toolbox.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("Jorteck.Toolbox.Core.EncounterModel", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("EncounterPresets");
                });

            modelBuilder.Entity("Jorteck.Toolbox.Core.EncounterModel", b =>
                {
                    b.OwnsMany("Jorteck.Toolbox.Core.EncounterModel+EncounterSpawn", "Creatures", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<byte[]>("CreatureData")
                                .HasColumnType("BLOB");

                            b1.Property<string>("EncounterName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<float>("LocalOffsetX")
                                .HasColumnType("REAL");

                            b1.Property<float>("LocalOffsetY")
                                .HasColumnType("REAL");

                            b1.Property<float>("LocalOffsetZ")
                                .HasColumnType("REAL");

                            b1.HasKey("Id");

                            b1.HasIndex("EncounterName");

                            b1.ToTable("EncounterSpawn");

                            b1.WithOwner("Encounter")
                                .HasForeignKey("EncounterName");

                            b1.Navigation("Encounter");
                        });

                    b.Navigation("Creatures");
                });
#pragma warning restore 612, 618
        }
    }
}
